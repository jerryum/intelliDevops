variables:
  DOCKER_DRIVER: overlay
  APP_DOCKERFILE_LOCATION: "Dockerfile"
  APP_IMAGE_NAME: "nexclipper-cron"
  APP_VERSION: "0.9.1"

default:
  services:
    - docker:dind
  tags:
    - nexclipper
  retry: 2
  image: docker:latest

cache:
  key: ${APP_IMAGE_NAME}
  paths:
    - node_modules/

stages:
  - build-code
  - dev
  - stg

code-build:
  image: node:lts-alpine
  stage: build-code
  script:
    - npm install
  artifacts:
    paths:
      - package-lock.json
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "staging" ||  $CI_COMMIT_BRANCH =~ /\b^(issue|feature|bugfix|improvement).*$\b/


docker-build-dev:
  stage: dev
  before_script:
    - "apk add --no-cache git"
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper-dev"
  script:
    - echo "building docker image for $APP_IMAGE_NAME "
    - "source /data/scripts/build_v3.sh $APP_IMAGE_NAME"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH =~ /\b^(issue|feature|bugfix|improvement).*$\b/

deploy-nexclipper-cron-dev:
  stage: dev
  image: repo.nexclipper.io/nexclipper/helm-kubectl:latest
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper-dev"
  before_script:
    - echo -e "\nLogin to Kubernetes"
    - source /data/scripts/login-cluster.sh dev
  script:
    - "source /data/scripts/deploy_v3.sh dev nc"
  needs:
    - job: docker-build-dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: $CI_COMMIT_BRANCH =~ /\b^(issue|feature|bugfix|improvement).*$\b/
      when: manual


docker-build-stg:
  stage: stg
  before_script:
    - "apk add --no-cache git"
  variables:
    BUILD_TARGET_STAGE: production-build-stage
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
  script:
    - echo "building docker image for $APP_IMAGE_NAME "
    - "source /data/scripts/build_v3.sh $APP_IMAGE_NAME"
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"

deploy-nexclipper-cron-stg:
  stage: stg
  image: repo.nexclipper.io/nexclipper/helm-kubectl:latest
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
  before_script:
    - echo -e "\nLogin to Kubernetes"
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name nxc-prd-01
  script:
   - "source /data/scripts/deploy_v3.sh stg nc"
  needs:
    - job: docker-build-stg
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
