variables:
  APP_IMAGE_NAME: "nexclipper-alerthub"
  APP_VERSION_DEV: "0.0.9"
  APP_VERSION_STG: "0.0.9"

default:
  tags:
    - nexclipper
  retry: 2

cache:
  key: ${APP_IMAGE_NAME}
  paths:
    - node_modules/

stages:
  - build-code
  - dev
  - stg

code-build:
  image: node:lts-alpine
  stage: build-code
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - package-lock.json
      - dist/ 
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH =~ /\b^(issue|feature|bugfix|improvement).*$\b/

docker-build-commit:
  stage: build-code
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"$HARBOR_URL/$HARBOR_NEXCLIPPER_PROJECT/$APP_IMAGE_NAME\":{\"username\":\"$HARBOR_USER\",\"password\":\"$HARBOR_PASS\"}}}" > /kaniko/.docker/config.json
  script:
    - echo "building docker image for $APP_IMAGE_NAME "
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --target "common-build-stage"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "$HARBOR_URL/$HARBOR_NEXCLIPPER_PROJECT/$APP_IMAGE_NAME:${CI_COMMIT_SHORT_SHA}"
  needs:
    - code-build
  rules:
    - if: $CI_COMMIT_BRANCH =~ /\b^(issue|feature|bugfix|improvement).*$\b/
      when: manual

deploy-nexclipper-alerthub-commit:
  stage: build-code
  image: repo.nexclipper.io/nexclipper/helm-kubectl:latest
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
  before_script:
    - echo -e "\nLogin to Kubernetes"
    - source /data/scripts/login-cluster.sh ncml-dev
  script:
    - "source /data/scripts/deploy.sh dev nc ${CI_COMMIT_SHORT_SHA}"
  needs: 
    - job: "docker-build-commit"
  rules:
    - if: $CI_COMMIT_BRANCH =~ /\b^(issue|feature|bugfix|improvement).*$\b/
      when: manual


docker-build-nexclipper-alerthub:
  stage: dev
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"$HARBOR_URL/$HARBOR_NEXCLIPPER_PROJECT/$APP_IMAGE_NAME\":{\"username\":\"$HARBOR_USER\",\"password\":\"$HARBOR_PASS\"}}}" > /kaniko/.docker/config.json
  script:
    - echo "building docker image for $APP_IMAGE_NAME "
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --target "common-build-stage"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "$HARBOR_URL/$HARBOR_NEXCLIPPER_PROJECT/$APP_IMAGE_NAME:${APP_VERSION_DEV}"
      --destination "$HARBOR_URL/$HARBOR_NEXCLIPPER_PROJECT/$APP_IMAGE_NAME:latest"
      --destination "$HARBOR_URL/$HARBOR_NEXCLIPPER_PROJECT/$APP_IMAGE_NAME:${CI_COMMIT_SHORT_SHA}"
  needs:
    - job: code-build
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

deploy-nexclipper-alerthub-dev:
  stage: dev
  image: repo.nexclipper.io/nexclipper/helm-kubectl:latest
  variables:
    HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
  before_script:
    - echo -e "\nLogin to Kubernetes"
    - source /data/scripts/login-cluster.sh ncml-dev
  script:
    - "source /data/scripts/deploy.sh dev nc ${APP_VERSION_DEV}"
  needs:
    - job: docker-build-nexclipper-alerthub
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

 

# deploy-nexclipper-alerthub-stg:
#   stage: stg
#   image: repo.nexclipper.io/nexclipper/helm-kubectl:latest
#   variables:
#     HARBOR_NEXCLIPPER_PROJECT: "nexclipper"
#   before_script:
#     - echo -e "\nLogin to Kubernetes"
#     - source /data/scripts/login-cluster.sh stg
#   script:
#    - "source /data/scripts/deploy.sh stg nc ${APP_VERSION_STG}"
#   rules:
#     - if: $CI_COMMIT_BRANCH == "staging" 
